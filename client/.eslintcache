[{"C:\\Users\\Koder\\Desktop\\programingLS\\projects\\porfolio\\net-qa\\client\\src\\index.tsx":"1","C:\\Users\\Koder\\Desktop\\programingLS\\projects\\porfolio\\net-qa\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\Koder\\Desktop\\programingLS\\projects\\porfolio\\net-qa\\client\\src\\App.tsx":"3","C:\\Users\\Koder\\Desktop\\programingLS\\projects\\porfolio\\net-qa\\client\\src\\components\\Navbar.tsx":"4","C:\\Users\\Koder\\Desktop\\programingLS\\projects\\porfolio\\net-qa\\client\\src\\layout\\Main.tsx":"5","C:\\Users\\Koder\\Desktop\\programingLS\\projects\\porfolio\\net-qa\\client\\src\\components\\PostList.tsx":"6"},{"size":478,"mtime":1608576209617,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":352,"mtime":1608653268850,"results":"10","hashOfConfig":"8"},{"size":2633,"mtime":1608582638049,"results":"11","hashOfConfig":"8"},{"size":943,"mtime":1608653452859,"results":"12","hashOfConfig":"8"},{"size":2542,"mtime":1608653378317,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"p5r2f3",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Koder\\Desktop\\programingLS\\projects\\porfolio\\net-qa\\client\\src\\index.tsx",[],["28","29"],"C:\\Users\\Koder\\Desktop\\programingLS\\projects\\porfolio\\net-qa\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\Koder\\Desktop\\programingLS\\projects\\porfolio\\net-qa\\client\\src\\App.tsx",["30"],"C:\\Users\\Koder\\Desktop\\programingLS\\projects\\porfolio\\net-qa\\client\\src\\components\\Navbar.tsx",["31","32"],"import {\r\n    AppBar,\r\n    Button,\r\n    Checkbox,\r\n    Container,\r\n    Grid,\r\n    Input,\r\n    InputBase,\r\n    ListItemText,\r\n    MenuItem,\r\n    Select,\r\n    TextField,\r\n    Toolbar,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst Navbar: React.FC<{ options: string[] }> = ({ options }) => {\r\n    const [categories, setCategories] = React.useState<string[]>([]);\r\n\r\n    const handleSelect = (e: React.ChangeEvent<{ value: unknown }>) => {\r\n        setCategories(e.target.value as string[]);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\">\r\n            <AppBar color=\"inherit\" position=\"static\">\r\n                <Toolbar>\r\n                    <Grid spacing={3} container>\r\n                        <Grid item xs={1}>\r\n                            <Button\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"inherit\"\r\n                            >\r\n                                add\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={7}>\r\n                            <Select\r\n                                fullWidth\r\n                                label=\"categories\"\r\n                                multiple\r\n                                onChange={handleSelect}\r\n                                value={categories}\r\n                                input={<Input />}\r\n                                renderValue={(selected: unknown) =>\r\n                                    (selected as string[]).join(\", \")\r\n                                }\r\n                            >\r\n                                {options.map((value, index) => (\r\n                                    <MenuItem\r\n                                        key={Date.now() + index}\r\n                                        value={value}\r\n                                    >\r\n                                        <Checkbox\r\n                                            checked={categories.includes(value)}\r\n                                        />\r\n                                        <ListItemText primary={value} />\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={4}>\r\n                            <Input fullWidth placeholder=\"Searchâ€¦\"></Input>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Koder\\Desktop\\programingLS\\projects\\porfolio\\net-qa\\client\\src\\layout\\Main.tsx",["33"],"C:\\Users\\Koder\\Desktop\\programingLS\\projects\\porfolio\\net-qa\\client\\src\\components\\PostList.tsx",["34","35","36","37","38","39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":10,"nodeType":"46","messageId":"47","endLine":1,"endColumn":20},{"ruleId":"44","severity":1,"message":"48","line":8,"column":5,"nodeType":"46","messageId":"47","endLine":8,"endColumn":14},{"ruleId":"44","severity":1,"message":"49","line":12,"column":5,"nodeType":"46","messageId":"47","endLine":12,"endColumn":14},{"ruleId":"44","severity":1,"message":"50","line":6,"column":22,"nodeType":"46","messageId":"47","endLine":6,"endColumn":33},{"ruleId":"44","severity":1,"message":"51","line":1,"column":8,"nodeType":"46","messageId":"47","endLine":1,"endColumn":15},{"ruleId":"44","severity":1,"message":"52","line":3,"column":5,"nodeType":"46","messageId":"47","endLine":3,"endColumn":14},{"ruleId":"44","severity":1,"message":"53","line":4,"column":5,"nodeType":"46","messageId":"47","endLine":4,"endColumn":21},{"ruleId":"44","severity":1,"message":"54","line":5,"column":5,"nodeType":"46","messageId":"47","endLine":5,"endColumn":21},{"ruleId":"44","severity":1,"message":"45","line":12,"column":5,"nodeType":"46","messageId":"47","endLine":12,"endColumn":15},{"ruleId":"44","severity":1,"message":"55","line":16,"column":8,"nodeType":"46","messageId":"47","endLine":16,"endColumn":22},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'InputBase' is defined but never used.","'TextField' is defined but never used.","'setPostData' is assigned a value but never used.","'classes' is defined but never used.","'Accordion' is defined but never used.","'AccordionDetails' is defined but never used.","'AccordionSummary' is defined but never used.","'ExpandMoreIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]